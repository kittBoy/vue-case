(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-d458"],{"3fa7":function(n,t,e){"use strict";e.r(t);var r=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",n._l(n.list,function(t){return e("Kanban",{staticClass:"kanban todo",attrs:{options:n.options,"header-text":t.name}},[e("template",{slot:"left"},[e("CodeEditor",{staticClass:"app-codeEditor",attrs:{value:t.rawHtml}})],1),e("template",{slot:"right"},[e(t.component,{tag:"component"})],1)],2)}))},i=[],s=e("c665"),o=e("dc0a"),a=e("aa9a"),l=e("d328"),c=e("11d9"),m=e("9ab4"),u=e("60a3"),h=e("6260"),f=e("f0b0"),d=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("div",{staticClass:"case-item"},[e("h4",[n._v("1. 基础")]),e("el-button",{on:{click:n.hello}},[n._v("mixins")])],1)])},p=[],v={created:function(){this.hello()},methods:{hello:function(){this.$notify({title:"hello",message:"hi"})}}},b=function(n){function t(){return Object(s["a"])(this,t),Object(l["a"])(this,Object(c["a"])(t).apply(this,arguments))}return Object(o["a"])(t,n),t}(u["e"]);b=m["a"]([Object(u["a"])({mixins:[v]})],b);var x=b,g=x,y=e("2877"),_=Object(y["a"])(g,d,p,!1,null,null,null);_.options.__file="Basics.vue";var O=_.exports,j=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("div",{staticClass:"case-item"},[e("h4",[n._v("1. 选项合并")]),e("el-button",{on:{click:n.hello}},[n._v("mixins")])],1),n._m(0)])},C=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"case-item"},[e("h4",[n._v("2. 钩子合并")]),e("div",[n._v("请注意mixins和组件自身created的调用顺序")])])}],k={data:function(){return{message:"hello",foo:"mixins"}},created:function(){this.hello(),this.notify("Mixins","先执行")},methods:{notify:function(n,t){var e=this;setTimeout(function(){e.$notify({title:n,message:t})})},hello:function(){this.notify(this.foo,this.message)}}},$=function(n){function t(){var n;return Object(s["a"])(this,t),n=Object(l["a"])(this,Object(c["a"])(t).apply(this,arguments)),n.message="hello",n.foo="self",n}return Object(a["a"])(t,[{key:"created",value:function(){this.notify("self","后执行")}}]),Object(o["a"])(t,n),t}(u["e"]);$=m["a"]([Object(u["a"])({mixins:[k]})],$);var w=$,M=w,V=Object(y["a"])(M,j,C,!1,null,null,null);V.options.__file="OptionMerging.vue";var E=V.exports,H=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("div",{staticClass:"case-item"},[e("h4",[n._v("1. 全局混入")]),e("el-button",{on:{click:n.sayHi}},[n._v("全局混入")])],1)])},B=[];u["e"].mixin({methods:{sayHi:function(){this.$notify({title:"from global",message:this.msg})}}});var J=function(n){function t(){var n;return Object(s["a"])(this,t),n=Object(l["a"])(this,Object(c["a"])(t).apply(this,arguments)),n.msg="hello",n}return Object(o["a"])(t,n),t}(u["e"]);J=m["a"]([u["a"]],J);var K=J,T=K,G=Object(y["a"])(T,H,B,!1,null,null,null);G.options.__file="GlobalMixin.vue";var P=G.exports,q=function(n){function t(){var n;return Object(s["a"])(this,t),n=Object(l["a"])(this,Object(c["a"])(t).apply(this,arguments)),n.options={group:"mission"},n}return Object(a["a"])(t,[{key:"list",get:function(){return[{name:"mixins基础",rawHtml:e("f7aa"),component:O},{name:"选项合并",rawHtml:e("565d"),component:E},{name:"全局混入",rawHtml:e("818e"),component:P}]}}]),Object(o["a"])(t,n),t}(u["e"]);q=m["a"]([Object(u["a"])({components:{Kanban:f["a"],CodeEditor:h["a"]}})],q);var z=q,A=z,D=Object(y["a"])(A,r,i,!1,null,null,null);D.options.__file="index.vue";t["default"]=D.exports},"565d":function(n,t){n.exports="\x3c!--\r\n1. 选项合并\r\n比如，数据对象在内部会进行浅合并 (一层属性深度)，在和组件的数据发生冲突时以组件数据优先。\r\n\r\n2. 钩子合并\r\n同名钩子函数将混合为一个数组，因此都将被调用。另外，混入对象的钩子将在组件自身钩子之前调用。\r\n\r\n值为对象的选项，例如 methods, components 和 directives，将被混合为同一个对象。两个对象键名冲突时，取组件对象的键值对。\r\n注意：Vue.extend() 也使用同样的策略进行合并。\r\n--\x3e\r\n<template>\r\n    <div>\r\n\r\n        <div class=\"case-item\">\r\n            <h4>1. 选项合并</h4>\r\n            <el-button @click=\"hello\">mixins</el-button>\r\n        </div>\r\n\r\n        <div class=\"case-item\">\r\n            <h4>2. 钩子合并</h4>\r\n            <div>请注意mixins和组件自身created的调用顺序</div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {Vue, Component} from 'vue-property-decorator'\r\n\r\n    const myMixin = {\r\n        data () {\r\n            return {\r\n                message: 'hello',\r\n                foo: 'mixins'\r\n            }\r\n        },\r\n        created () {\r\n            this.hello()\r\n            this.notify('Mixins', '先执行')\r\n        },\r\n        methods: {\r\n            notify (title, message) {\r\n                setTimeout(() => {\r\n                    this.$notify({\r\n                        title,\r\n                        message\r\n                    })\r\n                })\r\n            },\r\n            hello () {\r\n                this.notify(this.foo, this.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    @Component({\r\n        mixins: [myMixin]\r\n    })\r\n    export default class OptionMerging extends Vue {\r\n        message = 'hello'\r\n        foo = 'self'\r\n\r\n        created() {\r\n            this.notify('self', '后执行')\r\n        }\r\n    }\r\n<\/script>\r\n\r\n\r\n\r\n"},"818e":function(n,t){n.exports="\x3c!--\r\n谨慎使用全局混入对象，因为会影响到每个单独创建的 Vue 实例 (包括第三方模板)。大多数情况下，只应当应用于自定义选项，就像上面示例一样。也可以将其用作 Plugins 以避免产生重复应用\r\n--\x3e\r\n\r\n<template>\r\n    <div>\r\n\r\n        <div class=\"case-item\">\r\n            <h4>1. 全局混入</h4>\r\n            <el-button @click=\"sayHi\">全局混入</el-button>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {Vue, Component} from 'vue-property-decorator'\r\n\r\n    Vue.mixin({\r\n        methods: {\r\n            sayHi () {\r\n                this.$notify({\r\n                    title: 'from global',\r\n                    message: this.msg\r\n                })\r\n            }\r\n        }\r\n    })\r\n    @Component\r\n    export default class Basics extends Vue {\r\n        msg = 'hello'\r\n    }\r\n<\/script>\r\n\r\n\r\n\r\n"},f7aa:function(n,t){n.exports="<template>\r\n    <div>\r\n\r\n        <div class=\"case-item\">\r\n            <h4>1. 基础</h4>\r\n            <el-button @click=\"hello\">mixins</el-button>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import {Vue, Component} from 'vue-property-decorator'\r\n\r\n    const myMixin = {\r\n        created () {\r\n            this.hello()\r\n        },\r\n        methods: {\r\n            hello () {\r\n                this.$notify({\r\n                    title: 'hello',\r\n                    message: 'hi'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    @Component({\r\n        mixins: [myMixin]\r\n    })\r\n    export default class Basics extends Vue {\r\n    }\r\n<\/script>\r\n\r\n\r\n\r\n"}}]);
//# sourceMappingURL=chunk-d458.3c8c7125.js.map